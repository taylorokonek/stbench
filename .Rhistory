summary(gam.mod)
# Chunk 28
vis.gam(gam.mod,theta=30,phi=30)
# Chunk 29: gam_tmp
pred.grid.gam <- expand.grid(seq(179000,181000,l=51),
seq(330000,332000,l=51))
pred.dat.gam <- data.frame(x=pred.grid.gam[,1],
y=pred.grid.gam[,2], dist=mean(meuse$dist), elev=mean(meuse$elev))
zinc.pred.gam <- predict.gam(gam.mod, pred.dat.gam,type="terms")[,3]
zinc.pred.gam.sd<- predict.gam(gam.mod,se.fit=T, pred.dat.gam,type="terms")[[2]][,3]
# Chunk 30
library(fields)
image.plot(x=pred.grid.gam[["Var1"]][1:51],
y=unique(pred.grid.gam[["Var2"]]),
z=matrix(zinc.pred.gam,nrow=51,ncol=51),
col=terrain.colors(100),
xlab="x-coordinate",
ylab="y-coordinate",
breaks=seq( -1, 1,,101),
axis.args=list( at=c(-1,-0.5,0,0.5,1), labels=c('-1','-0.5','0','0.5','1') ))
symbols( detrend$coords[,1],
detrend$coords[,2],
circles=(detrend$data-min(detrend$data))/1,
add=T,inches=0.04)
# Chunk 31
library(fields)
image.plot(x=pred.grid.gam[["Var1"]][1:51],
y=unique(pred.grid.gam[["Var2"]]),
z=matrix(zinc.pred.gam,nrow=51,ncol=51),
col=terrain.colors(100),
xlab="x-coordinate",
ylab="y-coordinate",
breaks=seq( -1, 1,,101),
axis.args=list( at=c(-1,-0.5,0,0.5,1), labels=c('-1','-0.5','0','0.5','1') ))
symbols( detrend$coords[,1],
detrend$coords[,2],
circles=(detrend$data-min(detrend$data))/1,
add=T,inches=0.04)
# Chunk 33
image.plot(x=pred.grid[["Var1"]][1:51],
y=unique(pred.grid[["Var2"]]),
z=matrix(zinc.pred.gam.sd,nrow=51,ncol=51),
col=cm.colors(100),
xlab="x-coordinate",
ylab="y-coordinate",breaks=seq(0.03, 0.47,,101),
axis.args=list( at=c(0.1,0.2,0.3,0.4), labels=c('0.1','0.2','0.3','0.4') ))
points(detrend$coords[,1],detrend$coords[,2],cex=.5,pch=16)
# Chunk 34
rm(list=ls())
pal <-  function(n = 9){ brewer.pal(n, "Reds") }
data(meuse)
coords <- SpatialPoints(meuse[,c("x","y")])
meuse1 <- SpatialPointsDataFrame(coords,meuse)
data(meuse.riv)
river_polygon <- Polygons(list(Polygon(meuse.riv)),ID="meuse")
rivers <- SpatialPolygons(list(river_polygon))
coordinates(meuse) = ~x+y
# Chunk 35
plot(meuse1,axes=T)
plot(rivers,add=T)
# Chunk 36
library(gstat)
cld <- variogram(log(zinc) ~ 1, meuse, cloud = TRUE)
plot(cld,ylab="Semi-variance",xlab="Distance (m)")
# Chunk 37
cld <- variogram(log(zinc) ~ 1, meuse, cloud = TRUE)
svgm <- variogram(log(zinc) ~ 1, meuse)
d <- data.frame(gamma = c(cld$gamma, svgm$gamma),
dist = c(cld$dist, svgm$dist),
id = c(rep("cloud", nrow(cld)), rep("sample variogram", nrow(svgm)))
)
xyplot(gamma ~ dist | id, d,
scales = list(y = list(relation = "free",
#ylim = list(NULL, c(-.005,0.7)))),
limits = list(NULL, c(-.005,0.7)))),
layout = c(1, 2), as.table = TRUE,
panel = function(x,y, ...) {
if (panel.number() == 2)
ltext(x+10, y, svgm$np, adj = c(0,0.5),cex=.4) #$
panel.xyplot(x,y,...)
},
xlim = c(0, 1590),
cex = .5, pch = 3
)
# Chunk 38
cld <- variogram(log(zinc) ~ 1, meuse, cloud = TRUE)
svgm <- variogram(log(zinc) ~ 1, meuse)
d <- data.frame(gamma = c(cld$gamma, svgm$gamma),
dist = c(cld$dist, svgm$dist),
id = c(rep("cloud", nrow(cld)), rep("sample variogram", nrow(svgm)))
)
xyplot(gamma ~ dist | id, d,
scales = list(y = list(relation = "free",
#ylim = list(NULL, c(-.005,0.7)))),
limits = list(NULL, c(-.005,0.7)))),
layout = c(1, 2), as.table = TRUE,
panel = function(x,y, ...) {
if (panel.number() == 2)
ltext(x+10, y, svgm$np, adj = c(0,0.5),cex=.4) #$
panel.xyplot(x,y,...)
},
xlim = c(0, 1590),
cex = .5, pch = 3
)
# Chunk 39
v <- variogram(log(zinc) ~ 1, meuse)
plot(v, type = 'b', pch = 3,xlab="Distance (m)",ylab="Semi-variance")
fn = function(n = 100) {
for (i in 1:n) {
meuse$random = sample(meuse$zinc)
v = variogram(log(random) ~ 1, meuse)
trellis.focus("panel", 1, 1, highlight = FALSE)
llines(v$dist, v$gamma, col = 'grey')
trellis.unfocus()
}
}
fn()
# Chunk 40
v <- variogram(log(zinc) ~ 1, meuse)
plot(v, type = 'b', pch = 3,xlab="Distance (m)",ylab="Semi-variogram")
fn = function(n = 100) {
for (i in 1:n) {
meuse$random = sample(meuse$zinc)
v = variogram(log(random) ~ 1, meuse)
trellis.focus("panel", 1, 1, highlight = FALSE)
llines(v$dist, v$gamma, col = 'grey')
trellis.unfocus()
}
}
fn()
# Chunk 41
cld2 <- variogram(log(zinc) ~ dist+elev, meuse, cloud = TRUE)
plot(cld2,ylab="Semi-variance",xlab="Distance (m)")
# Chunk 42
gstatbin <- variogram(log(zinc) ~ dist+elev, meuse, width=200)
plot(gstatbin,ylab="Semi-variance",xlab="Distance (m)")
# Chunk 43
dircld <- variogram(log(zinc)~dist+elev, meuse, alpha=c(0,45,90,135))
# Chunk 44
plot(dircld,xlab="Distance (m)",ylab="Semi-variance")
# Chunk 45
hscat(log(zinc)~1, meuse, c(0, 80, 120, 250, 500, 1000),cex=.1)
# Chunk 46
hscat(log(zinc)~1, meuse, c(0, 80, 120, 250, 500, 1000),cex=.1)
# Chunk 47
library(geostatsp)
coord <- matrix(c(meuse$x,meuse$y),ncol=2)
lzinc <- log(meuse$zinc)
elev <- meuse$elev
dist <- meuse$dist
dfmeuse <- data.frame(lzinc,elev,dist)
data.spdf <- SpatialPointsDataFrame(coords=coord,data=dfmeuse)
formula <- lzinc ~  elev+dist
zincglgm <- glgm(formula,grid=30,shape=1,family="gaussian",buffer=200,data=data.spdf,priorCI=list(c(sd=0.1,1),range=c(100,1200)))
zincglgm$parameters$summary
# Chunk 48
library(rgdal)
library(maptools)
library(splancs)
library(spatstat)
# Chunk 49
if (!("R-examples" %in% list.files())) {
dir.create("R-examples")
}
# Chunk 51
# If the chunk throws an error, comment out the PREVIOUS automated downloading chunk (or changes knit option 'eval=T' to  'eval=F' for the PREVIOUS chunk). And manually download the corresponding .shp, .shx and .dbf files from the website.
spasthma <- readOGR(dsn="R-examples",layer="spasthma")
spbdry <- readOGR(dsn="R-examples",layer="spbdry")
spsrc <- readOGR(dsn="R-examples",layer="spsrc")
sproads <- readOGR(dsn="R-examples",layer="sproads")
# Chunk 52
plot(spbdry, axes=TRUE, lwd=0.5)
plot(sproads, add=TRUE, lwd=2, col="darkslategrey")
c_c <- (spasthma$Asthma == "case") + 1
plot(spasthma[c_c == 1,], add=TRUE, pch=4, cex=0.6, col="mediumaquamarine")
plot(spasthma[c_c == 2,], add=TRUE, pch=17, cex=0.75, col="goldenrod2")
plot(spsrc, pch=22, add=TRUE, cex=1.2, bg="brown4")
legend("bottomright", legend=c("non-cases", "cases", "pollution sources"), pch=c(4, 17, 22), pt.cex=c(0.6, 0.75, 1.2), pt.bg=c(NA, NA, "brown4"), col=c("mediumaquamarine", "goldenrod2", "black"),
bty="n",cex=0.6)
# Chunk 53
plot(spbdry, axes=TRUE, lwd=0.5)
plot(sproads, add=TRUE, lwd=2, col="darkslategrey")
c_c <- (spasthma$Asthma == "case") + 1
plot(spasthma[c_c == 1,], add=TRUE, pch=4, cex=0.3, col="mediumaquamarine")
plot(spasthma[c_c == 2,], add=TRUE, pch=17, cex=0.4, col="goldenrod2")
plot(spsrc, pch=22, add=TRUE, cex=1.2, bg="brown4")
legend("topleft", legend=c("non-cases", "cases", "pollution sources"), pch=c(4, 17, 22), pt.cex=c(0.6, 0.75, 1.2), pt.bg=c(NA, NA, "brown4"),
col=c("mediumaquamarine", "goldenrod2", "black"), bty="n",cex=0.6)
bwasthma <- .06
pppasthma <- as(spasthma, "ppp")
pppasthma$window <- as(spbdry, "owin")
as.owin.SpatialPolygons(spbdry)
?spatialstat
list.files()
install.packages("rgdal")
install.packages("rgdal")
devtools::install_github(repo="taylorokonek/simultBench")
devtools::install_github("statdivlab/rigr")
library(rigr)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- rep(c(0,1), 25)
x2
6 - 2 * x1
6 - 2 * x1 + rnorm(50, 0, 2)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- rep(c(0,1), 25)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- rep(c(0,1), 25)
y1 <- 6 - 2 * x1 + rnorm(50, 0, 0.1)
y2 <- 8 - 2 * x1 + rnorm(50, 0, 0.1)
y <- ifelse(x2 == 0, y1, y2)
y
y1
plot(x1, y)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- rep(c(0,1), each = 25)
y1 <- 6 - 2 * x1 + rnorm(50, 0, 0.1)
y2 <- 8 - 2 * x1 + rnorm(50, 0, 0.1)
y <- ifelse(x2 == 0, y1, y2)
plot(x1, y)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- ifelse(x1 > 0.5, 1, 0)
y1 <- 6 - 2 * x1 + rnorm(50, 0, 0.1)
y2 <- 8 - 2 * x1 + rnorm(50, 0, 0.1)
y <- ifelse(x2 == 0, y1, y2)
plot(x1, y)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- ifelse(x1 > 0.5, 1, 0)
y1 <- 6 - 2 * x1 + rnorm(50, 0, 0.5)
y2 <- 8 - 2 * x1 + rnorm(50, 0, 0.5)
y <- ifelse(x2 == 0, y1, y2)
plot(x1, y)
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- ifelse(x1 > 0.5, 1, 0)
y1 <- 6 - 2 * x1 + rnorm(50, 0, 0.9)
y2 <- 8 - 2 * x1 + rnorm(50, 0, 0.9)
y <- ifelse(x2 == 0, y1, y2)
plot(x1, y)
data.frame(x1, x2, y) %>%
ggplot(aes(x1, y)) +
geom_point()
library(tidyverse)
data.frame(x1, x2, y) %>%
ggplot(aes(x1, y)) +
geom_point()
set.seed(1234)
x1 <- runif(50, 0, 1)
x2 <- ifelse(x1 > 0.5, 1, 0)
y1 <- 6 - 2 * x1 + rnorm(50, 0, 0.7)
y2 <- 8 - 2 * x1 + rnorm(50, 0, 0.7)
y <- ifelse(x2 == 0, y1, y2)
plot(x1, y)
data.frame(x1, x2, y) %>%
ggplot(aes(x1, y)) +
geom_point()
data.frame(x1, x2, y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point()
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point()
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_fixed()
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point()
?coord_cartesian
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8))
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20))
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg1.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg1.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg1.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE),
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE, col = "black") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg1.png", plot = g)
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg2.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
#geom_smooth(method = "lm", se = FALSE, col = "black") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg1.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
#geom_smooth(method = "lm", se = FALSE, col = "black") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg3.png", plot = g)
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE, col = "black") +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE, col = "black") +
geom_smooth(aes(group = x2, col = x2), method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE, col = "black") +
geom_smooth(aes(group = x2, col = x2), method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg4.png", plot = g)
library(formatR)
knitr::opts_chunk$set(echo = TRUE)
## function to color text
colFmt = function(x,color){
outputFormat = knitr::opts_knit$get("rmarkdown.pandoc.to")
if(outputFormat == 'latex')
paste("\\textcolor{",color,"}{",x,"}",sep="")
else if(outputFormat == 'html')
paste("<font color='",color,"'>",x,"</font>",sep="")
else
x
}
setwd("/Users/taylorokonek/Desktop/git/BIOST311/Datasets/")
library(formatR)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(error = FALSE)
knitr::opts_chunk$set(warning = FALSE)
knitr::opts_chunk$set(message = FALSE)
knitr::opts_chunk$set(results = "hide")
desc <- births %>% pull(gestation) %>% fivenum()
births <- readr::read_csv(url("https://raw.githubusercontent.com/cwolock/BIOST311/main/Datasets/births.csv"))
births %>% head()
births
desc <- births %>% pull(gestation) %>% fivenum()
desc
births$gestation %>% summary()
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE, col = "black") +
geom_smooth(aes(group = x2, col = x2), method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg4.png", plot = g)
g
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y, col = x2)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
#geom_smooth(method = "lm", se = FALSE, col = "black") +
#geom_smooth(aes(group = x2, col = x2), method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg3.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
geom_smooth(method = "lm", se = FALSE, col = "black") +
#geom_smooth(aes(group = x2, col = x2), method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
g
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg2.png", plot = g)
g <- data.frame(x1, x2 = factor(x2), y) %>%
ggplot(aes(x1, y)) +
geom_point() +
coord_cartesian(xlim = c(0,1), ylim = c(3, 8)) +
theme_bw() +
#geom_smooth(method = "lm", se = FALSE, col = "black") +
#geom_smooth(aes(group = x2, col = x2), method = "lm", se = FALSE) +
theme(axis.text = element_text(size = 18),
axis.title = element_text(size = 20),
legend.title = element_text(size = 20),
legend.text = element_text(size = 18))
ggsave(filename = "/Users/taylorokonek/Desktop/git/BIOST311/Lectures/Ch1/multreg1.png", plot = g)
devtools::install_github("mlysy/TMBtools")
getwd()
setwd("Desktop/git")
list.files()
TMBtools::tmb_create_package(path = "stbench",
tmb_files = c("binary_intercepts_bym2.hpp"))
